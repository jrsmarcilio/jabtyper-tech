import React, { useEffect, useState } from 'react';
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { IPhrases } from '../utils/Types';
import { PhraseList, UserList } from '../utils/Lists';
import ResponsiveModal from '../components/ResponsiveModal';
import Footer from '../components/Footer';
import Header from '../components/Header';

const Home: NextPage = () => {
  const [phraseInfor, setPhraseInfor] = useState<IPhrases>();
  const [quantsWords, setQuantsWords] = useState<number>(0);
  const [initialGame, setInicialGame] = useState<boolean>(false);
  const [gameTime, setGameTime] = useState<number>(20);
  const [textareaValue, setTextareaValue] = useState<string>('');
  const [showModal, setShowModal] = useState<boolean>(false);

  const handleFocusEvent = () => setInicialGame(true);

  useEffect(() => {
    const interval = setInterval(() => {
      if (gameTime > 0) {
        setGameTime(gameTime => gameTime -= 1);
      } else {
        clearInterval(interval);
        setInicialGame(true);
      }
    }, 1000);
    return () => clearInterval(interval);
  }, [gameTime])

  useEffect(() => {
    const randomphrase = PhraseList[Math.floor(Math.random() * PhraseList.length)]
    setPhraseInfor(randomphrase);
    setQuantsWords(randomphrase.text.split(' ').length);
  }, [])

  const handleRestart = () => {
    setGameTime(20);
    setInicialGame(false);
    setTextareaValue("");
    setShowModal(false);
  }

  const handleTextAreaChange = (e: React.ChangeEvent<HTMLTextAreaElement>) =>
    setTextareaValue(e.target.value);

  return (
    <>
      <Head>
        <title>Jab Typer Tech | Simple typing game with JavaScript</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <div className={styles.container}>
        {showModal && <ResponsiveModal show={showModal} />}
        <main className={styles.main}>

          <div className={styles.flexRow}>
            <section className={styles.card}>
              <p>Quantity of words</p>
              <h2>{quantsWords} words</h2>
            </section>

            <section className={styles.card}>
              <p>Remaining</p>
              <h2>{gameTime} seconds</h2>
              {initialGame && <span onClick={handleRestart} className={styles.restart}>Restart</span>}
            </section>
          </div>

          <section className={styles.card} style={{ width: '100%' }}>
            <h5 className={styles.phrase}>{phraseInfor ?.text}</h5>
            <p className={styles.author}> - {phraseInfor ?.author}</p>
          </section>

          <textarea
            placeholder="Type here..."
            rows={quantsWords / 11}
            readOnly={gameTime > 0 ? false : true}
            className={styles.textarea}
            value={textareaValue}
            onFocus={handleFocusEvent}
            onChange={handleTextAreaChange}
          />

          <section className={styles.card} style={{ width: '100%' }}>
            <h2>Ranking</h2>

            <hr className={styles.card} style={{ padding: 0, height: '5px' }} />

            <div className={styles.listRow}>
              <section className={styles.listHeader}><p>Wps</p></section>
              <section className={styles.listHeader}><p>Name</p></section>
            </div>

            {UserList.map((user) => (
              <div className={styles.listRow}>
                <section className={styles.listHeader}><p>{user.wps}</p></section>
                <section className={styles.listHeader}><p>{user.name}</p></section>
              </div>
            ))}

          </section>

        </main>
      </div>

      <Footer />
    </>
  )
}

export default Home
